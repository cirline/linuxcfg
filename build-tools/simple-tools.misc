#!/bin/bash

function umount_ecryptfs() {
sudo umount -t ecryptfs $efs_mnt_path
}

function mount_ecryptfs() {
if [ ! -d $efs_data_path ]; then mkdir $efs_data_path; fi
if [ ! -d $efs_mnt_path ]; then mkdir $efs_mnt_path; fi

dir_content=`ls $efs_mnt_path`
if [ -z "$dir_content" ]; then
	sudo mount -t ecryptfs $efs_data_path $efs_mnt_path -o ecryptfs_cipher=aes -o ecryptfs_key_bytes=16 -o ecryptfs_passthrough=n -o ecryptfs_enable_filename_crypto=y
else
	pr_err "$efs_mnt_path not empty\n"
fi
}

function quick_dot() {
if [[ ! -f $1 ]]; then
    echo_err "cannot found: $1"
else
    dot -Tpng $1 -O
    eog $1.png &
fi
}

# start simple-tools ui
function tools_ui() {
python $run_path/simple-tools.ui
}

function tools_var() {
if [ "$1" == "efs_mnt_path" ]; then
	echo $efs_mnt_path
fi
}

# delete file, input a list file
function doing_before_leaving() {
pr_err " Serious Wanring: This Action Will Remove Your File !!! Sure ? (yes/no) "
read sure
if [ "$sure" != "yes" -a "$sure" != "no" ]; then
	pr_info "$sure invalid, input yes or no!"
	return
elif [ "$sure" == "no" ]; then
	pr_info "exit."
	return
else
	pr_warn "\n\t\t$sure\n\n"
	if [ ! -f $do_before_leaving_config ]; then
		echo_err "$do_before_leaving_config no exist."
		return
	fi

	local file=$do_before_leaving_config
	((i = 0))
	while read line
	do
		file_array[i]=$line
		((i++))
	done < $file

	for (( i = 0; i < ${#file_array[*]}; i++)); do
		file=${file_array[i]}
		if [ ! -f $file ]; then
			pr_err "$file no exist\n"
		else
			pr_warn "$file, delete ? (y/n) "
			read confirm
			if [ "$confirm" == "y" ]; then
				pr_info "delete\n\n"
				rm -rf $file
			else
				pr_info "skip\n\n"
			fi
		fi
	done

fi
}

function backup_files() {
	local file=backup_list

	if [ ! -f $file ]; then
		pr_err "not found backup_list\n"
		return
	fi

	if [ ! -d file ]; then
		mkdir file
	fi
	if [ ! -d dir ]; then
		mkdir dir
	fi
	((i = 0))
	while read line
	do
		if [ -e "$line" ]; then
			pr_debug "$line\n"
			filename=$(split_filename $line)
			if [ -d $line ]; then
				rsync -a --delete $line dir/
			else
				rsync -a $line file/$filename
			fi

			((i++))
		else
			pr_warn "not found $line\n"
		fi
	done < $file

	pr_info "sync: $i\n"
}

